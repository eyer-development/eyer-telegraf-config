# Telegraf Configuration
[global_tags]

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "60s"
  round_interval = true
  metric_batch_size = 10000
  metric_buffer_limit = 100000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "5s"
  precision = ""
  logfile_rotation_interval = "1d"
  logfile_rotation_max_size = "1MB"
  hostname = ""
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# # A plugin that can transmit metrics over HTTP
 [[outputs.http]]
   url = "https://data.eyer.ai/api/telegraf/boomiprocesses"
    timeout = "5s"
    method = "POST"
    data_format = "json"
    use_batch_format = true
    [outputs.http.headers]

    #Insert your Eyer authentication key here
	authenticate = "your_authentication_key_goes_here"


###############################################################################
#                            AGGREGATOR PLUGINS                               #
###############################################################################

# # Keep the aggregate basicstats of each metric passing through.
 [[aggregators.basicstats]]
   period = "60s"
   drop_original = true
   stats = ["count","max","mean"]

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# # Read metrics from one or more commands that can output to stdout
 [[inputs.exec]]

   #Insert the path to your Telegraf folder and PowerShell script here
   commands = ['powershell "your_Telegraf_path\BoomiProcesses.ps1"']
   timeout = "15s"


# # Parse a complete file each interval (make sure to use forward slashes in this file path)
 [[inputs.file]]
 files = ["your_Telegraf_path/Transactions*.json"]
 character_encoding = "utf-16le"
 data_format = "json_v2"

# Add a subtable to use the `json_v2` parser
 [[inputs.file.json_v2]]
   [[inputs.file.json_v2.object]]
   path = "result"
   tags = ["processName","atomId"]
