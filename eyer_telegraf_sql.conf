# Telegraf Configuration
[global_tags]

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "5s"
  round_interval = true
  metric_batch_size = 400
  metric_buffer_limit = 1000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "5s"
  precision = ""
  logfile_rotation_interval = "1d"
  logfile_rotation_max_size = "1MB"
  hostname = ""
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# # A plugin that can transmit metrics over HTTP
[[outputs.http]]
  url = "https://data.eyer.ai/api/telegraf/mssql"
  timeout = "5s"
  method = "POST"
  data_format = "json"
  use_batch_format = true
  [outputs.http.headers]
    authenticate = "your_apiTokenPush"

[outputs.http.tagpass]
     instance = ["Total"]
     wait_category = ["*"]

# # Send telegraf metrics to file(s) for debug
# [[outputs.file]]
#   files = ["stdout", "sql.out"]
#   data_format = "json"

#   [outputs.file.tagpass]
#     instance = ["Total"]
#     wait_category = ["*"]

###############################################################################
#                            AGGREGATOR PLUGINS                               #
###############################################################################

# # Keep the aggregate basicstats of each metric passing through.
[[aggregators.basicstats]]
  period = "60s"
  drop_original = true
  stats = ["max", "mean", "sum"]



###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# # Read metrics from Microsoft SQL Server
 [[inputs.sqlserver]]
#   ## Specify instances to monitor with a list of connection strings.
#   ## All connection parameters are optional.
#   ## By default, the host is localhost, listening on default port, TCP 1433.
#   ##   for Windows, the user is the currently running AD user (SSO).
#   ##   See https://github.com/microsoft/go-mssqldb for detailed connection
#   ##   parameters, in particular, tls connections can be created like so:
#   ##   "encrypt=true;certificate=<cert>;hostNameInCertificate=<SqlServer host fqdn>"
   servers = [
 #    "Server=192.168.88.187;Port=1433;User Id=<user>;Password=<password>;app name=telegraf;log=1;",
      "Server=localhost;Port=1433;Database=master;Integrated Security=SSPI;log=1",
   ]

#   # query_timeout = "0s"
#
#   ## Authentication method
#   ## valid methods: "connection_string", "AAD"
#   # auth_method = "connection_string"

   database_type = "SQLServer"
#
#   ## A list of queries to include. If not specified, all the below listed queries are used.
   include_query = ["SQLServerPerformanceCounters", "SQLServerWaitStatsCategorized"]
   query_version = 2
   [inputs.sqlserver.tagpass]
     counter = ["*/sec"]
     wait_category = ["*"]
